<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd


        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/resources/**"/>
            <mvc:exclude-mapping path="/login/**"/>
            <bean id="commonAttributesInterceptor" class="com.directfn.oms.core.front_terminal.application.interceptors.CommonAttributeInterceptor">
                <description> This interceptor is using to set common attributes</description>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <context:component-scan base-package="com.directfn.oms.core.front_terminal.application.controllers"/>
    <context:annotation-config/>
    <mvc:annotation-driven/>

    <mvc:resources mapping="/resources/**" location="/resources/*"/>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>WEB-INF/resources/messages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="localeChangeInterceptor"
          class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang"/>
    </bean>

    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en"/>
    </bean>
    <!--CookieLocaleResolver-->

    <bean id="handlerMapping"
          class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <ref bean="localeChangeInterceptor"/>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <!--<mvc:resources mapping="/resources/**" location="/resources/" />-->
    <!-- Register the Customer.properties -->
    <!--<bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename" value="com/mkyong/customer/properties/Customer" />
    </bean>-->

    <!-- <bean
             class="org.springframework.web.servlet.view.InternalResourceViewResolver">
         <property name="prefix">
             <value>/WEB-INF/views/</value>
         </property>
         <property name="suffix">
             <value>.jsp</value>
         </property>
     </bean>-->
    <!--<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/views/authentication/"/>
    </bean>-->
    <!-- This map contains the properties to be used in freemarker view-->
    <util:map id="configurationMap">
        <!--<entry key="property_enableInstitutions" value="${config_enableInstitutions}" />-->
        <entry key="property_enableInstitutions" value="0" />
    </util:map>

    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPaths">
            <list>
               
            </list>
        </property>
        <property name="freemarkerVariables" ref="configurationMap" />
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <!--<property name="prefix" value="layout:"/>-->
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <!--<property name="exposeSpringMacroHelpers" value="true"/>-->
        <!--<property name="contentType" value="text/html;charset=UTF-8"/>-->
        <!--<property name="redirectContextRelative" value="true"/>-->
        <property name="requestContextAttribute" value="reqCtx"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="cache" value="true"/>
    </bean>
    <mvc:interceptors>
        <bean class="com.directfn.oms.core.front_terminal.application.interceptors.LoginInterceptor"/>
    </mvc:interceptors>
    <bean id="errorMapping" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView" value="error"/>
        <property name="defaultStatusCode" value="500"/>
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error/uploadsize</prop>
            </props>
        </property>
    </bean>
    <!--Service-->
    <!-- <alias alias="remoteTemplate" name="remoteOMSConnectorJboss"/>
     &lt;!&ndash;<alias alias="remoteTemplate" name="remoteOMSConnectorWS"/>&ndash;&gt;
     &lt;!&ndash;<alias alias="remoteTemplate" name="mockOMSConnector"/>&ndash;&gt;
     <bean id="remoteOMSConnectorJboss"
           class="org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean" lazy-init="true">
         <property name="jndiName" value="ejb/WebConnectorFacade"/>
         <property name="resourceRef" value="false"/>
         <property name="businessInterface" value="com.mubasher.connectors.web.session.WebConnectorFacade"/>
         <property name="homeInterface" value="com.mubasher.connectors.web.session.WebConnectorFacadeHome"/>
         <property name="jndiTemplate" ref="jbossOMSRemoteEnvironment"/>
         <property name="refreshHomeOnConnectFailure" value="true"/>
     </bean>
     <bean id="jbossOMSRemoteEnvironment" class="org.springframework.jndi.JndiTemplate" lazy-init="true">
         <property name="environment">
             <props>
                 <prop key="java.naming.provider.url">jnp://192.168.13.50:1099</prop>
                 <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory</prop>
                 <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces</prop>
             </props>
         </property>
     </bean>-->


    <!--<bean id="MainPageRedirect" class="org.springframework.web.servlet.view.RedirectView">
       <property name="url" value="MainPageRedirect.htm"/>
   </bean>
   <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
       <property name="mappings">
           <props>
               <prop key="/MainPageRedirect.htm">mainRedirectController</prop>
           </props>
       </property>
   </bean>
   <bean id="mainRedirectController"
         class="org.springframework.web.servlet.mvc.ParameterizableViewController">
       <property name="viewName" value="index" />
   </bean>-->

    <!--&lt;!&ndash;needed because we require fileupload in the org.springframework.samples.mvc.fileupload package &ndash;&gt;
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
-->
    <!--<mvc:interceptors>
        &lt;!&ndash; Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de &ndash;&gt;
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="language"/>
        </bean>
    </mvc:interceptors>-->
    <!--<bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
        <property name="attributes">
            <map>
                <entry key="version" value="1.0.0.32"/>
            </map>
        </property>
    </bean>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>-->

    <!--<bean id="messageSource" class="com.dfn.rr.utils.ReloadableResourceBundleJSONMessageSource">
        <property name="basenames" value="/WEB-INF/properties/messages,/WEB-INF/properties/style"/>
        <property name="cacheSeconds" value="7200"/>
    </bean>
     <bean id="authenticationManagerService" class="com.dfn.rr.adminmanager.service.AuthenticationManagerServiceImpl">
        <constructor-arg name="authenticationDAO" ref="authenticationDAO"/>
    </bean>-->
    <!--<bean id="advisoryUserDAO" class="com.dfn.rr.adminmanager.persistence.impl.AdvisoryUserDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="authenticationManagerService" class="com.dfn.rr.adminmanager.service.AuthenticationManagerServiceImpl">
        <constructor-arg name="authenticationDAO" ref="authenticationDAO"/>
    </bean>-->

    <bean id="gson" class="com.google.gson.Gson">
        <description> This is to convert java object to JSON string and vise versa</description>
    </bean>

    <bean id="webUtil" class="com.directfn.oms.core.front_terminal.application.util.WebUtil">
        <description> This is to use utility methods in web layer</description>
        <property name="gson" ref="gson"/>
    </bean>
</beans>